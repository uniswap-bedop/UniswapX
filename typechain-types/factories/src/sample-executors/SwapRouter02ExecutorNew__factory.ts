/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SwapRouter02ExecutorNew,
  SwapRouter02ExecutorNewInterface,
} from "../../../src/sample-executors/SwapRouter02ExecutorNew";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_whitelistedCaller",
        type: "address",
      },
      {
        internalType: "contract IReactor",
        name: "_reactor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract ISwapRouter02",
        name: "_swapRouter02",
        type: "address",
      },
      {
        internalType: "contract IBebopSettlement",
        name: "_bebop",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "MsgSenderNotReactor",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeTransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "order",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "sig",
            type: "bytes",
          },
        ],
        internalType: "struct SignedOrder",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "callbackData",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "order",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "sig",
            type: "bytes",
          },
        ],
        internalType: "struct SignedOrder[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "callbackData",
        type: "bytes",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20[]",
        name: "tokensToApprove",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "multicallData",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "contract IReactor",
                name: "reactor",
                type: "address",
              },
              {
                internalType: "address",
                name: "swapper",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "contract IValidationCallback",
                name: "additionalValidationContract",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "additionalValidationData",
                type: "bytes",
              },
            ],
            internalType: "struct OrderInfo",
            name: "info",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract ERC20",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxAmount",
                type: "uint256",
              },
            ],
            internalType: "struct InputToken",
            name: "input",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct OutputToken[]",
            name: "outputs",
            type: "tuple[]",
          },
          {
            internalType: "bytes",
            name: "sig",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct ResolvedOrder[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "callbackData",
        type: "bytes",
      },
    ],
    name: "reactorCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "unwrapWETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61012060405234801561001157600080fd5b506040516127633803806127638339818101604052810190610033919061036a565b82806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508473ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff16634aa4a4fc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020f91906103e5565b73ffffffffffffffffffffffffffffffffffffffff166101008173ffffffffffffffffffffffffffffffffffffffff16815250505050505050610412565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061027d82610252565b9050919050565b61028d81610272565b811461029857600080fd5b50565b6000815190506102aa81610284565b92915050565b60006102bb82610272565b9050919050565b6102cb816102b0565b81146102d657600080fd5b50565b6000815190506102e8816102c2565b92915050565b60006102f982610272565b9050919050565b610309816102ee565b811461031457600080fd5b50565b60008151905061032681610300565b92915050565b600061033782610272565b9050919050565b6103478161032c565b811461035257600080fd5b50565b6000815190506103648161033e565b92915050565b600080600080600060a086880312156103865761038561024d565b5b60006103948882890161029b565b95505060206103a5888289016102d9565b94505060406103b68882890161029b565b93505060606103c788828901610317565b92505060806103d888828901610355565b9150509295509295909350565b6000602082840312156103fb576103fa61024d565b5b60006104098482850161029b565b91505092915050565b60805160a05160c05160e051610100516122c761049c600039600081816102b1015281816103fa015281816104360152818161093301526109cf0152600081816101d7015281816105210152818161056d01528181610b110152610c2a015260008181610a8c0152610ba50152600061033701526000818161069f015261073c01526122c76000f3fe60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461012f578063d0f2d8ac1461015a578063e5135ec614610183578063f2fde38b146101ac57610086565b8063585da6281461008b57806363fb0b96146100b4578063690d8320146100dd57806389a3f1361461010657610086565b3661008657005b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190611062565b6101d5565b005b3480156100c057600080fd5b506100db60048036038101906100d6919061118f565b6105fe565b005b3480156100e957600080fd5b5061010460048036038101906100ff919061126e565b610806565b005b34801561011257600080fd5b5061012d6004803603810190610128919061126e565b6108a1565b005b34801561013b57600080fd5b50610144610a66565b60405161015191906112aa565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c91906112e9565b610a8a565b005b34801561018f57600080fd5b506101aa60048036038101906101a591906113bb565b610ba3565b005b3480156101b857600080fd5b506101d360048036038101906101ce919061126e565b610cbf565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025a576040517f933fe52f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600080600086868101906102719190611773565b94509450945094509450600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610335577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db08460c001516040518263ffffffff1660e01b81526004016000604051808303818588803b15801561031b57600080fd5b505af115801561032f573d6000803e3d6000fd5b50505050505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634dcebcba8484846040518463ffffffff1660e01b8152600401610392939291906119d7565b600060405180830381600087803b1580156103ac57600080fd5b505af11580156103c0573d6000803e3d6000fd5b50505050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361054f577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161048d91906112aa565b602060405180830381865afa1580156104aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ce9190611a2d565b6040518263ffffffff1660e01b81526004016104ea9190611a5a565b600060405180830381600087803b15801561050457600080fd5b505af1158015610518573d6000803e3d6000fd5b5050505061054a7f00000000000000000000000000000000000000000000000000000000000000008460e00151610dea565b6105f3565b8373ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f00000000000000000000000000000000000000000000000000000000000000008560e001516040518363ffffffff1660e01b81526004016105ae929190611a75565b6020604051808303816000875af11580156105cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f19190611ad6565b505b505050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611b60565b60405180910390fd5b60005b848490508110156107395761072c7f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8787858181106106f2576106f1611b80565b5b90506020020160208101906107079190611bed565b73ffffffffffffffffffffffffffffffffffffffff16610e929092919063ffffffff16565b808060010191505061068f565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635ae401dc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846040518463ffffffff1660e01b81526004016107b793929190611d6d565b6000604051808303816000875af11580156107d6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107ff9190611ef0565b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088b90611b60565b60405180910390fd5b61089e8147610f40565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461092f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092690611b60565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161098a91906112aa565b602060405180830381865afa1580156109a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cb9190611a2d565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b8152600401610a269190611a5a565b600060405180830381600087803b158015610a4057600080fd5b505af1158015610a54573d6000803e3d6000fd5b50505050610a628247610f40565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b0f576040517f8c6e5d7100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630d3358848484846040518463ffffffff1660e01b8152600401610b6c93929190611fcf565b600060405180830381600087803b158015610b8657600080fd5b505af1158015610b9a573d6000803e3d6000fd5b50505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c28576040517f8c6e5d7100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166313fb72c7858585856040518563ffffffff1660e01b8152600401610c879493929190612138565b600060405180830381600087803b158015610ca157600080fd5b505af1158015610cb5573d6000803e3d6000fd5b5050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4490611b60565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610e10906121a4565b60006040518083038185875af1925050503d8060008114610e4d576040519150601f19603f3d011682016040523d82523d6000602084013e610e52565b606091505b5050905080610e8d576040517ff4b3b1bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b60006040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610f3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3190612205565b60405180910390fd5b50505050565b600080600080600085875af1905080610f8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8590612271565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610fcc57610fcb610fa7565b5b8235905067ffffffffffffffff811115610fe957610fe8610fac565b5b60208301915083602082028301111561100557611004610fb1565b5b9250929050565b60008083601f84011261102257611021610fa7565b5b8235905067ffffffffffffffff81111561103f5761103e610fac565b5b60208301915083600182028301111561105b5761105a610fb1565b5b9250929050565b6000806000806040858703121561107c5761107b610f9d565b5b600085013567ffffffffffffffff81111561109a57611099610fa2565b5b6110a687828801610fb6565b9450945050602085013567ffffffffffffffff8111156110c9576110c8610fa2565b5b6110d58782880161100c565b925092505092959194509250565b60008083601f8401126110f9576110f8610fa7565b5b8235905067ffffffffffffffff81111561111657611115610fac565b5b60208301915083602082028301111561113257611131610fb1565b5b9250929050565b60008083601f84011261114f5761114e610fa7565b5b8235905067ffffffffffffffff81111561116c5761116b610fac565b5b60208301915083602082028301111561118857611187610fb1565b5b9250929050565b600080600080604085870312156111a9576111a8610f9d565b5b600085013567ffffffffffffffff8111156111c7576111c6610fa2565b5b6111d3878288016110e3565b9450945050602085013567ffffffffffffffff8111156111f6576111f5610fa2565b5b61120287828801611139565b925092505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061123b82611210565b9050919050565b61124b81611230565b811461125657600080fd5b50565b60008135905061126881611242565b92915050565b60006020828403121561128457611283610f9d565b5b600061129284828501611259565b91505092915050565b6112a481611230565b82525050565b60006020820190506112bf600083018461129b565b92915050565b600080fd5b6000604082840312156112e0576112df6112c5565b5b81905092915050565b60008060006040848603121561130257611301610f9d565b5b600084013567ffffffffffffffff8111156113205761131f610fa2565b5b61132c868287016112ca565b935050602084013567ffffffffffffffff81111561134d5761134c610fa2565b5b6113598682870161100c565b92509250509250925092565b60008083601f84011261137b5761137a610fa7565b5b8235905067ffffffffffffffff81111561139857611397610fac565b5b6020830191508360208202830111156113b4576113b3610fb1565b5b9250929050565b600080600080604085870312156113d5576113d4610f9d565b5b600085013567ffffffffffffffff8111156113f3576113f2610fa2565b5b6113ff87828801611365565b9450945050602085013567ffffffffffffffff81111561142257611421610fa2565b5b61142e8782880161100c565b925092505092959194509250565b600061144782611210565b9050919050565b6114578161143c565b811461146257600080fd5b50565b6000813590506114748161144e565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114c88261147f565b810181811067ffffffffffffffff821117156114e7576114e6611490565b5b80604052505050565b60006114fa610f93565b905061150682826114bf565b919050565b600080fd5b6000819050919050565b61152381611510565b811461152e57600080fd5b50565b6000813590506115408161151a565b92915050565b6000610160828403121561155d5761155c61147a565b5b6115686101606114f0565b9050600061157884828501611531565b600083015250602061158c84828501611259565b60208301525060406115a084828501611259565b60408301525060606115b484828501611531565b60608301525060806115c884828501611259565b60808301525060a06115dc84828501611259565b60a08301525060c06115f084828501611531565b60c08301525060e061160484828501611531565b60e08301525061010061161984828501611259565b6101008301525061012061162f84828501611531565b6101208301525061014061164584828501611531565b6101408301525092915050565b600080fd5b600067ffffffffffffffff82111561167257611671611490565b5b61167b8261147f565b9050602081019050919050565b82818337600083830152505050565b60006116aa6116a584611657565b6114f0565b9050828152602081018484840111156116c6576116c5611652565b5b6116d1848285611688565b509392505050565b600082601f8301126116ee576116ed610fa7565b5b81356116fe848260208601611697565b91505092915050565b60006040828403121561171d5761171c61147a565b5b61172760406114f0565b9050600082013567ffffffffffffffff8111156117475761174661150b565b5b611753848285016116d9565b600083015250602061176784828501611531565b60208301525092915050565b60008060008060006101e086880312156117905761178f610f9d565b5b600061179e88828901611465565b95505060206117af88828901611465565b94505060406117c088828901611546565b9350506101a086013567ffffffffffffffff8111156117e2576117e1610fa2565b5b6117ee88828901611707565b9250506101c061180088828901611531565b9150509295509295909350565b61181681611510565b82525050565b61182581611230565b82525050565b61016082016000820151611842600085018261180d565b506020820151611855602085018261181c565b506040820151611868604085018261181c565b50606082015161187b606085018261180d565b50608082015161188e608085018261181c565b5060a08201516118a160a085018261181c565b5060c08201516118b460c085018261180d565b5060e08201516118c760e085018261180d565b506101008201516118dc61010085018261181c565b506101208201516118f161012085018261180d565b5061014082015161190661014085018261180d565b50505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561194657808201518184015260208101905061192b565b60008484015250505050565b600061195d8261190c565b6119678185611917565b9350611977818560208601611928565b6119808161147f565b840191505092915050565b600060408301600083015184820360008601526119a88282611952565b91505060208301516119bd602086018261180d565b508091505092915050565b6119d181611510565b82525050565b60006101a0820190506119ed600083018661182b565b818103610160830152611a00818561198b565b9050611a106101808301846119c8565b949350505050565b600081519050611a278161151a565b92915050565b600060208284031215611a4357611a42610f9d565b5b6000611a5184828501611a18565b91505092915050565b6000602082019050611a6f60008301846119c8565b92915050565b6000604082019050611a8a600083018561129b565b611a9760208301846119c8565b9392505050565b60008115159050919050565b611ab381611a9e565b8114611abe57600080fd5b50565b600081519050611ad081611aaa565b92915050565b600060208284031215611aec57611aeb610f9d565b5b6000611afa84828501611ac1565b91505092915050565b600082825260208201905092915050565b7f554e415554484f52495a45440000000000000000000000000000000000000000600082015250565b6000611b4a600c83611b03565b9150611b5582611b14565b602082019050919050565b60006020820190508181036000830152611b7981611b3d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611bba82611230565b9050919050565b611bca81611baf565b8114611bd557600080fd5b50565b600081359050611be781611bc1565b92915050565b600060208284031215611c0357611c02610f9d565b5b6000611c1184828501611bd8565b91505092915050565b600082825260208201905092915050565b6000819050919050565b6000611c418385611917565b9350611c4e838584611688565b611c578361147f565b840190509392505050565b6000611c6f848484611c35565b90509392505050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611ca457611ca3611c82565b5b83810192508235915060208301925067ffffffffffffffff821115611ccc57611ccb611c78565b5b600182023603831315611ce257611ce1611c7d565b5b509250929050565b6000602082019050919050565b6000611d038385611c1a565b935083602084028501611d1584611c2b565b8060005b87811015611d5b578484038952611d308284611c87565b611d3b868284611c62565b9550611d4684611cea565b935060208b019a505050600181019050611d19565b50829750879450505050509392505050565b6000604082019050611d8260008301866119c8565b8181036020830152611d95818486611cf7565b9050949350505050565b600067ffffffffffffffff821115611dba57611db9611490565b5b602082029050602081019050919050565b6000611dde611dd984611657565b6114f0565b905082815260208101848484011115611dfa57611df9611652565b5b611e05848285611928565b509392505050565b600082601f830112611e2257611e21610fa7565b5b8151611e32848260208601611dcb565b91505092915050565b6000611e4e611e4984611d9f565b6114f0565b90508083825260208201905060208402830185811115611e7157611e70610fb1565b5b835b81811015611eb857805167ffffffffffffffff811115611e9657611e95610fa7565b5b808601611ea38982611e0d565b85526020850194505050602081019050611e73565b5050509392505050565b600082601f830112611ed757611ed6610fa7565b5b8151611ee7848260208601611e3b565b91505092915050565b600060208284031215611f0657611f05610f9d565b5b600082015167ffffffffffffffff811115611f2457611f23610fa2565b5b611f3084828501611ec2565b91505092915050565b600060408301611f4c6000840184611c87565b8583036000870152611f5f838284611c35565b92505050611f706020840184611c87565b8583036020870152611f83838284611c35565b925050508091505092915050565b600082825260208201905092915050565b6000611fae8385611f91565b9350611fbb838584611688565b611fc48361147f565b840190509392505050565b60006040820190508181036000830152611fe98186611f39565b90508181036020830152611ffe818486611fa2565b9050949350505050565b600082825260208201905092915050565b6000819050919050565b6000604083016120366000840184611c87565b8583036000870152612049838284611c35565b9250505061205a6020840184611c87565b858303602087015261206d838284611c35565b925050508091505092915050565b60006120878383612023565b905092915050565b6000823560016040038336030381126120ab576120aa611c82565b5b82810191505092915050565b6000602082019050919050565b60006120d08385612008565b9350836020840285016120e284612019565b8060005b878110156121265784840389526120fd828461208f565b612107858261207b565b9450612112836120b7565b925060208a019950506001810190506120e6565b50829750879450505050509392505050565b600060408201905081810360008301526121538186886120c4565b90508181036020830152612168818486611fa2565b905095945050505050565b600081905092915050565b50565b600061218e600083612173565b91506121998261217e565b600082019050919050565b60006121af82612181565b9150819050919050565b7f415050524f56455f4641494c4544000000000000000000000000000000000000600082015250565b60006121ef600e83611b03565b91506121fa826121b9565b602082019050919050565b6000602082019050818103600083015261221e816121e2565b9050919050565b7f4554485f5452414e534645525f4641494c454400000000000000000000000000600082015250565b600061225b601383611b03565b915061226682612225565b602082019050919050565b6000602082019050818103600083015261228a8161224e565b905091905056fea2646970667358221220eab2064607a3461b0f643618cd76194a87665cad9ae2d8d044be9efb2befa7f164736f6c634300081c0033";

type SwapRouter02ExecutorNewConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapRouter02ExecutorNewConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapRouter02ExecutorNew__factory extends ContractFactory {
  constructor(...args: SwapRouter02ExecutorNewConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _whitelistedCaller: AddressLike,
    _reactor: AddressLike,
    _owner: AddressLike,
    _swapRouter02: AddressLike,
    _bebop: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _whitelistedCaller,
      _reactor,
      _owner,
      _swapRouter02,
      _bebop,
      overrides || {}
    );
  }
  override deploy(
    _whitelistedCaller: AddressLike,
    _reactor: AddressLike,
    _owner: AddressLike,
    _swapRouter02: AddressLike,
    _bebop: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _whitelistedCaller,
      _reactor,
      _owner,
      _swapRouter02,
      _bebop,
      overrides || {}
    ) as Promise<
      SwapRouter02ExecutorNew & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SwapRouter02ExecutorNew__factory {
    return super.connect(runner) as SwapRouter02ExecutorNew__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapRouter02ExecutorNewInterface {
    return new Interface(_abi) as SwapRouter02ExecutorNewInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SwapRouter02ExecutorNew {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SwapRouter02ExecutorNew;
  }
}
